{"version":3,"file":"wave-client.umd.js","sources":["../src/core/errors.js","../src/wave-client.js"],"sourcesContent":["/**\n * Error classes for the WAVE JavaScript client\n */\n\nexport class WaveClientError extends Error {\n    constructor(message, statusCode = null, detail = null, retryAfter = undefined) {\n        super(message);\n        this.name = 'WaveClientError';\n        this.statusCode = statusCode;\n        this.detail = detail;\n        if (retryAfter !== undefined) {\n            this.retryAfter = retryAfter; // milliseconds to wait before retry\n        }\n    }\n}\n\nexport class ValidationError extends WaveClientError {\n    constructor(message, detail) {\n        super(message, 400, detail);\n        this.name = 'ValidationError';\n    }\n}\n\nexport class AuthenticationError extends WaveClientError {\n    constructor(message, detail) {\n        super(message, 401, detail);\n        this.name = 'AuthenticationError';\n    }\n}\n\nexport class AuthorizationError extends WaveClientError {\n    constructor(message, detail) {\n        super(message, 403, detail);\n        this.name = 'AuthorizationError';\n    }\n}\n\nexport class NotFoundError extends WaveClientError {\n    constructor(message, detail) {\n        super(message, 404, detail);\n        this.name = 'NotFoundError';\n    }\n}\n\nexport class RateLimitError extends WaveClientError {\n    constructor(message, detail, retryAfter) {\n        super(message, 429, detail, retryAfter);\n        this.name = 'RateLimitError';\n    }\n}\n\nexport class ServerError extends WaveClientError {\n    constructor(message, statusCode, detail) {\n        super(message, statusCode, detail);\n        this.name = 'ServerError';\n    }\n}\n\n/**\n * Create appropriate error from HTTP response\n * @param {Response} response - Fetch API response\n * @param {Object} errorData - Parsed error response body\n * @returns {WaveClientError} Appropriate error instance\n */\nexport function createErrorFromResponse(response, errorData) {\n    const { status } = response;\n    const message = errorData?.detail || response.statusText || 'Unknown error';\n    const detail = errorData?.detail;\n\n    switch (status) {\n        case 400:\n            return new ValidationError(message, detail);\n        case 401:\n            return new AuthenticationError(message, detail);\n        case 403:\n            return new AuthorizationError(message, detail);\n        case 404:\n            return new NotFoundError(message, detail);\n        case 429: {\n            const retryAfter = parseRetryAfter(response.headers.get('Retry-After'));\n            return new RateLimitError(message, detail, retryAfter);\n        }\n        case 500:\n        case 502:\n        case 503:\n        case 504:\n            return new ServerError(message, status, detail);\n        default:\n            return new WaveClientError(message, status, detail);\n    }\n}\n\n/**\n * Parse Retry-After header value to milliseconds\n * @param {string|null} retryAfterHeader - Retry-After header value\n * @returns {number} Retry delay in milliseconds\n */\nfunction parseRetryAfter(retryAfterHeader) {\n    if (!retryAfterHeader) {\n        return undefined; // Return undefined when no header is provided\n    }\n\n    // Handle both seconds (number) and HTTP date formats\n    const seconds = parseInt(retryAfterHeader, 10);\n    if (!isNaN(seconds)) {\n        return seconds * 1000; // Convert to milliseconds\n    }\n\n    // Handle HTTP date format (less common for rate limiting)\n    const date = new Date(retryAfterHeader);\n    if (!isNaN(date.getTime())) {\n        return Math.max(0, date.getTime() - Date.now());\n    }\n\n    return 5000; // Default fallback for invalid headers\n}\n","/**\n * WAVE JavaScript Client\n *\n * Simple client for logging experiment data to the WAVE Backend API.\n * Focused on experiment data collection with robust error handling and retry logic.\n *\n * **Authentication**: Uses URL parameter-based API key extraction for browser security.\n * Add your API key to the URL: `?key=exp_abc123` or provide manually in constructor.\n *\n * **Security Benefits**:\n * - No API keys exposed in JavaScript source code or bundles\n * - Each experiment session gets unique temporary key via URL\n * - Prevents accidental exposure in version control\n *\n * @example\n * // URL-based authentication (recommended)\n * // URL: https://experiment-site.com/task.html?key=exp_abc123&participant=P001\n * const client = new WaveClient();\n *\n * @example\n * // Manual API key (for testing or special cases)\n * const client = new WaveClient({ apiKey: \"exp_abc123\" });\n */\n\nimport {\n    WaveClientError,\n    ValidationError,\n    AuthenticationError,\n    AuthorizationError,\n    NotFoundError,\n    RateLimitError,\n    ServerError,\n    createErrorFromResponse,\n} from './core/errors.js';\n\nexport default class WaveClient {\n    /**\n     * Create a WAVE client instance\n     * @param {Object} options - Configuration options\n     * @param {string} [options.apiKey] - API key (overrides URL parameter extraction)\n     * @param {string} [options.baseUrl='http://localhost:8000'] - Base URL for API\n     * @param {number} [options.timeout=30000] - Request timeout in milliseconds (generous for experiments)\n     * @param {number} [options.retries=5] - Maximum number of retries (prevent data loss)\n     * @param {number} [options.baseDelay=1000] - Base delay for exponential backoff (ms)\n     * @param {number} [options.maxDelay=30000] - Maximum delay between retries (ms)\n     *\n     * @example\n     * // Automatic URL parameter extraction (recommended for browser experiments)\n     * // URL: https://experiment-site.com/task.html?key=exp_abc123\n     * const client = new WaveClient();\n     *\n     * @example\n     * // Manual API key (overrides URL parameter)\n     * const client = new WaveClient({\n     *   apiKey: \"exp_abc123\",\n     *   baseUrl: \"https://api.example.com\"\n     * });\n     */\n    constructor(options = {}) {\n        // Configuration\n        this.apiKey = options.apiKey || this._getApiKeyFromUrl();\n        this.baseUrl =\n            options.baseUrl || this._getEnvVar('WAVE_API_URL') || 'http://localhost:8000';\n        this.timeout = options.timeout || 30000;\n        this.maxRetries = options.retries || 5;\n        this.baseDelay = options.baseDelay || 1000;\n        this.maxDelay = options.maxDelay || 30000;\n\n        // Client version for compatibility checking\n        this.clientVersion = '1.0.0';\n\n        // Validate API key is present\n        if (!this.apiKey) {\n            throw new AuthenticationError(\n                'API key is required. Provide apiKey option or include \"key\" parameter in URL.'\n            );\n        }\n\n        // Ensure baseUrl doesn't end with slash\n        this.baseUrl = this.baseUrl.replace(/\\/$/, '');\n    }\n\n    /**\n     * Primary method: Log experiment data\n     * @param {string} experimentId - Experiment UUID\n     * @param {string} participantId - Participant identifier\n     * @param {Object} data - Experiment data matching the experiment type schema\n     * @returns {Promise<Object>} Created data row with all fields\n     */\n    async logExperimentData(experimentId, participantId, data) {\n        if (!experimentId) {\n            throw new ValidationError('experimentId is required');\n        }\n        if (!participantId) {\n            throw new ValidationError('participantId is required');\n        }\n        if (!data || typeof data !== 'object' || Array.isArray(data)) {\n            throw new ValidationError('data must be a non-empty object');\n        }\n\n        const requestBody = {\n            participant_id: participantId,\n            data: data,\n        };\n\n        const url = `/api/v1/experiment-data/${experimentId}/data/`;\n        return await this._makeRequest('POST', url, requestBody);\n    }\n\n    /**\n     * Get API health status\n     * @returns {Promise<Object>} Health status\n     */\n    async getHealth() {\n        return await this._makeRequest('GET', '/health');\n    }\n\n    /**\n     * Get API version and compatibility information\n     * @returns {Promise<Object>} Version information\n     */\n    async getVersion() {\n        return await this._makeRequest('GET', '/version');\n    }\n\n    /**\n     * Update base URL\n     * @param {string} baseUrl - New base URL\n     */\n    setBaseUrl(baseUrl) {\n        if (!baseUrl) {\n            throw new ValidationError('Base URL cannot be empty');\n        }\n        this.baseUrl = baseUrl.replace(/\\/$/, '');\n    }\n\n    /**\n     * Make HTTP request with retry logic\n     * @private\n     * @param {string} method - HTTP method\n     * @param {string} url - URL path (relative to baseUrl)\n     * @param {Object} [body] - Request body for POST/PUT requests\n     * @param {number} [attempt=1] - Current attempt number\n     * @returns {Promise<Object>} Response data\n     */\n    async _makeRequest(method, url, body = null, attempt = 1) {\n        const fullUrl = `${this.baseUrl}${url}`;\n\n        const headers = {\n            Authorization: `Bearer ${this.apiKey}`,\n            'X-WAVE-Client-Version': this.clientVersion,\n            'Content-Type': 'application/json',\n        };\n\n        const requestOptions = {\n            method,\n            headers,\n        };\n\n        // Add timeout support (AbortSignal.timeout is not available in older environments)\n        if (typeof AbortSignal !== 'undefined' && AbortSignal.timeout) {\n            requestOptions.signal = AbortSignal.timeout(this.timeout);\n        } else if (typeof AbortController !== 'undefined') {\n            // Fallback for older environments\n            const controller = new AbortController();\n            requestOptions.signal = controller.signal;\n            setTimeout(() => controller.abort(), this.timeout);\n        }\n\n        if (body && (method === 'POST' || method === 'PUT')) {\n            requestOptions.body = JSON.stringify(body);\n        }\n\n        try {\n            const response = await fetch(fullUrl, requestOptions);\n\n            if (!response.ok) {\n                // Parse error response\n                let errorData;\n                try {\n                    errorData = await response.json();\n                } catch {\n                    errorData = { detail: response.statusText };\n                }\n\n                const error = createErrorFromResponse(response, errorData);\n\n                // Retry logic for retryable errors\n                if (this._shouldRetry(error, attempt)) {\n                    const delay = this._calculateDelay(attempt, error.retryAfter);\n                    console.warn(\n                        `Request failed (${error.name}), retrying in ${delay}ms (attempt ${attempt}/${this.maxRetries})`\n                    );\n\n                    await this._sleep(delay);\n                    return await this._makeRequest(method, url, body, attempt + 1);\n                }\n\n                throw error;\n            }\n\n            // Parse successful response\n            const responseData = await response.json();\n            return responseData;\n        } catch (error) {\n            // Handle network errors and timeouts\n            if (error.name === 'AbortError') {\n                const timeoutError = new WaveClientError(`Request timeout after ${this.timeout}ms`);\n\n                if (this._shouldRetry(timeoutError, attempt)) {\n                    const delay = this._calculateDelay(attempt);\n                    console.warn(\n                        `Request timeout, retrying in ${delay}ms (attempt ${attempt}/${this.maxRetries})`\n                    );\n\n                    await this._sleep(delay);\n                    return await this._makeRequest(method, url, body, attempt + 1);\n                }\n\n                throw timeoutError;\n            }\n\n            // Re-throw WAVE client errors\n            if (error instanceof WaveClientError) {\n                throw error;\n            }\n\n            // Handle other network errors\n            const networkError = new WaveClientError(`Network error: ${error.message}`);\n\n            if (this._shouldRetry(networkError, attempt)) {\n                const delay = this._calculateDelay(attempt);\n                console.warn(\n                    `Network error, retrying in ${delay}ms (attempt ${attempt}/${this.maxRetries})`\n                );\n\n                await this._sleep(delay);\n                return await this._makeRequest(method, url, body, attempt + 1);\n            }\n\n            throw networkError;\n        }\n    }\n\n    /**\n     * Determine if request should be retried\n     * @private\n     * @param {Error} error - Error that occurred\n     * @param {number} attempt - Current attempt number\n     * @returns {boolean} Whether to retry\n     */\n    _shouldRetry(error, attempt) {\n        if (attempt > this.maxRetries) {\n            return false;\n        }\n\n        // Don't retry client errors (4xx except rate limiting)\n        if (\n            error instanceof ValidationError ||\n            error instanceof AuthenticationError ||\n            error instanceof AuthorizationError ||\n            error instanceof NotFoundError\n        ) {\n            return false;\n        }\n\n        // Retry rate limits and server errors\n        if (\n            error instanceof RateLimitError ||\n            error instanceof ServerError ||\n            error.name === 'AbortError' ||\n            error instanceof WaveClientError\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Calculate delay for exponential backoff with jitter\n     * @private\n     * @param {number} attempt - Current attempt number\n     * @param {number} [retryAfter] - Server-specified retry delay (ms)\n     * @returns {number} Delay in milliseconds\n     */\n    _calculateDelay(attempt, retryAfter = null) {\n        if (retryAfter) {\n            // Honor server-specified delay for rate limiting\n            return Math.min(retryAfter, this.maxDelay);\n        }\n\n        // Exponential backoff with jitter\n        const exponentialDelay = this.baseDelay * Math.pow(2, attempt - 1);\n        const jitter = Math.random() * 1000; // Add randomness to avoid thundering herd\n\n        return Math.min(exponentialDelay + jitter, this.maxDelay);\n    }\n\n    /**\n     * Sleep for specified duration\n     * @private\n     * @param {number} ms - Milliseconds to sleep\n     * @returns {Promise<void>}\n     */\n    _sleep(ms) {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n\n    /**\n     * Extract API key from URL parameters (browser-based authentication)\n     * @private\n     * @returns {string|null} API key from URL parameter or null if not found\n     * @example\n     * // URL: https://experiment-site.com/task.html?key=exp_abc123&participant=P001\n     * // Returns: \"exp_abc123\"\n     *\n     * // URL: https://experiment-site.com/task.html#key=exp_def456\n     * // Returns: \"exp_def456\"\n     */\n    _getApiKeyFromUrl() {\n        // In Node.js test environment, check global references\n        const windowObj = typeof window !== 'undefined' ? window : global.window;\n        const URLSearchParamsClass =\n            typeof URLSearchParams !== 'undefined' ? URLSearchParams : global.URLSearchParams;\n\n        // Check if we're in a browser environment\n        if (!windowObj || !URLSearchParamsClass) {\n            return null; // Not in browser environment\n        }\n\n        try {\n            // Check query parameters (?key=...)\n            const urlParams = new URLSearchParamsClass(windowObj.location.search);\n            const queryKey = urlParams.get('key');\n            if (queryKey) return queryKey;\n\n            // Check hash parameters (#key=...)\n            const hashParams = new URLSearchParamsClass(windowObj.location.hash.substring(1));\n            const hashKey = hashParams.get('key');\n            if (hashKey) return hashKey;\n\n            return null;\n        } catch (error) {\n            console.warn('Failed to extract API key from URL:', error.message);\n            return null;\n        }\n    }\n\n    /**\n     * Get environment variable (Node.js only for security)\n     * @private\n     * @param {string} name - Environment variable name\n     * @returns {string|undefined} Environment variable value\n     */\n    _getEnvVar(name) {\n        // Node.js environment only\n        if (typeof process !== 'undefined' && process.env) {\n            return process.env[name];\n        }\n\n        // Browser environment: require explicit apiKey parameter\n        // Environment variables in browser bundles are always public\n        return undefined;\n    }\n}\n\n// Export error classes for external use\nexport {\n    WaveClientError,\n    ValidationError,\n    AuthenticationError,\n    AuthorizationError,\n    NotFoundError,\n    RateLimitError,\n    ServerError,\n};\n"],"names":[],"mappings":"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"}